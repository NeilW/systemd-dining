#!/bin/sh
set -e
umask 077
diningroom=/home/share/dining-room
base=10

#SystemD requirements...
XDG_RUNTIME_DIR=/run/user/$(id -u)
DBUS_SESSION_BUS_ADDRESS=unix:path=${XDG_RUNTIME_DIR}/bus
export XDG_RUNTIME_DIR DBUS_SESSION_BUS_ADDRESS

# count fileglob
count() {
    case ${1##*/} in
        \*)
            echo 0
            ;;
        *)
            echo $#
            ;;
    esac
}

grab_fork() {
    if [ ! -e "${diningroom}/forks/$1" ]
    then
        install -m=644 -T /dev/null "${diningroom}/forks/$1"
        echo "Acquired fork #$1"
    fi
}

remove_fork() {
    if [ -w "${diningroom}/forks/$1" ]
    then
        rm "${diningroom}/forks/$1"
        echo "Cleaned fork #$1"
    else
        echo "I don't have fork #$1"
        echo "Ignoring request"
        exit 0
    fi
}

if [ "$#" -ne 2 ]
then
	echo "Usage: ${0##*/} username subject"
	exit 64
fi

seat=$(my-dining-seat)
max=$(count ${diningroom}/seats/*)
max=$((max + base))
right_index=$((seat + 1))
if [ "${right_index}" -gt "${max}" ]
then
    right_index=$((base + 1))
fi
left_index=$((seat - 1))
if [ "${left_index}" -eq ${base} ]
then
    left_index=${max}
fi

other=$(my-dining-seat "${1}")
if [ -z "${other}" ]
then
    echo "$2: No seat found for ${1}"
    echo "Discarding mail"
    exit 0
fi

case "$2" in
Fork\ Request)
    echo "Received fork request from $1"
    # Try to be as atomic as possible
    if systemctl --user --quiet is-active eating.target hungry.target
    then
        if systemctl --user --quiet is-active hungry.target
        then
            echo "while hungry. Considering request..."
            # Check we're not transitioning between states
            if fork-check
            then
                echo "Mmmm. should be eating"
                echo "I'll pick up the fork again"
                install -m=644 -T /dev/null "${diningroom}/forks/${seat}"
                exit 0
            fi
            echo "I have priority"
            exit 0
        else
            echo "while eating. Ignoring request."
            exit 0
        fi
    fi
    echo "while thinking. Handling request"
    if [ "${other}" -eq "${left_index}" ]
    then
        remove_fork "${seat}"
    elif [ "${other}" -eq "${right_index}" ]
    then
        remove_fork "${right_index}"
    else
        echo "Fork Request error"
        echo "Unexpected seat ${other} for $1"
        echo "I'm seat ${seat}, left is ${left_index}, right is ${right_index}"
        echo "Discarding mail"
        exit 0
    fi
    exec response-fork "${1}"
    ;;
Fork\ Response)
    echo "Received fork response from $1"
    if [ "${other}" -eq "${left_index}" ]
    then
        grab_fork "${seat}"
    elif [ "${other}" -eq "${right_index}" ]
    then
        grab_fork "${right_index}"
    else
        echo "Fork Response error"
        echo "Unexpected seat ${other} for $1"
        echo "I'm seat ${seat}, left is ${left_index}, right is ${right_index}"
        echo "Discarding mail"
        exit 0
    fi
    ;;
*)
    echo "Unknown mail request ${2} from ${1}"
    echo "Discarding mail"
    exit 0
esac
exit 0
